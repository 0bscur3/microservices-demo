{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Weave-enabled AWS CloudFormation template to create resources required to run tasks on an ECS cluster.",
    "Resources": {
        "CatalogueRDS": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "AllocatedStorage": "100",
                "DBInstanceClass": "db.t2.medium",
                "DBName": "socksdb",
                "Engine": "MySQL",
                "MasterUsername": "catalogue_user",
                "MasterUserPassword": "default_password",
                "VPCSecurityGroups": [{
                    "Fn::GetAtt": ["DBEC2SecurityGroup", "GroupId"]
                }]
            }
        },
        "SQLImporter4": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": "ami-c51e3eb6",
                "InstanceType": "t2.micro",
                "SecurityGroupIds": [{
                    "Fn::GetAtt": ["DBEC2SecurityGroup", "GroupId"]
                }],
                "KeyName": "rdstest",
                "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
                     "#!/bin/bash -xe\n",
                     "yum update -y aws-cfn-bootstrap\n",

                     "# Install the files and packages from the metadata\n",
                     "/opt/aws/bin/cfn-init -v ",
                     "         --stack ", { "Ref" : "AWS::StackName" },
                     "         --resource SQLImporter3 ",
                     "         --region ", { "Ref" : "AWS::Region" }, "\n",

                     "# Signal the status from cfn-init\n",
                     "/opt/aws/bin/cfn-signal -e $? ",
                     "         --stack ", { "Ref" : "AWS::StackName" },
                     "         --resource SQLImporter3 ",
                     "         --region ", { "Ref" : "AWS::Region" }, "\n"
                ]]}}
            },
            "DependsOn": "CatalogueRDS",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "packages": {
                            "yum": {
                                "mysql": []
                            }
                        },
                        "commands": {
                            "get": {
                                "command": "wget https://raw.githubusercontent.com/microservices-demo/catalogue/master/docker/catalogue-db/data/dump.sql"
                            },
                            "import": {
                                "command": "mysql -u catalogue_user --password=default_password -h $SOCKS_DB -f -D socksdb < dump.sql ",
                                "env": {
                                    "SOCKS_DB": {
                                        "Fn::GetAtt": ["CatalogueRDS", "Endpoint.Address"]
                                    }
                                }
                            }

                        }
                    }
                }
            }
        },
        "EcsSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "ECS Allowed Ports"
            }
        },
        "DBEC2SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Open database for access",
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "3306",
                    "ToPort": "3306",
                    "SourceSecurityGroupName": {
                        "Ref": "EcsSecurityGroup"
                    }
                }]
            }
        }

    }
}
